
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUNARYleftTENSORPARPLUSWITHBOT CIRC ID LPAREN NEG OFC ONE PAR PLUS RPAREN SEC TENSOR TILDE TOP WHYNOT WITH ZEROformula : literalliteral : IDliteral : ID BOTformula : formula TENSOR formulaformula : formula PAR formulaformula : formula PLUS formulaformula : formula WITH formulaformula : OFC formula %prec UNARY\n               | WHYNOT formula %prec UNARY\n               | SEC formula %prec UNARYformula : NEG formula %prec UNARY\n               | CIRC formula %prec UNARY\n               | TILDE formula %prec UNARYformula : ONE\n               | BOT\n               | ZERO\n               | TOPformula : LPAREN formula RPAREN'

_lr_action_items = {'OFC':([0,3,4,5,6,7,8,13,15,16,17,18,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'WHYNOT':([0,3,4,5,6,7,8,13,15,16,17,18,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'SEC':([0,3,4,5,6,7,8,13,15,16,17,18,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'NEG':([0,3,4,5,6,7,8,13,15,16,17,18,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'CIRC':([0,3,4,5,6,7,8,13,15,16,17,18,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'TILDE':([0,3,4,5,6,7,8,13,15,16,17,18,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'ONE':([0,3,4,5,6,7,8,13,15,16,17,18,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'BOT':([0,3,4,5,6,7,8,13,14,15,16,17,18,],[10,10,10,10,10,10,10,10,26,10,10,10,10,]),'ZERO':([0,3,4,5,6,7,8,13,15,16,17,18,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'TOP':([0,3,4,5,6,7,8,13,15,16,17,18,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'LPAREN':([0,3,4,5,6,7,8,13,15,16,17,18,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'ID':([0,3,4,5,6,7,8,13,15,16,17,18,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,9,10,11,12,14,19,20,21,22,23,24,26,27,28,29,30,31,],[0,-1,-14,-15,-16,-17,-2,-8,-9,-10,-11,-12,-13,-3,-4,-5,-6,-7,-18,]),'TENSOR':([1,2,9,10,11,12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,],[15,-1,-14,-15,-16,-17,-2,15,15,15,15,15,15,15,-3,-4,-5,-6,-7,-18,]),'PAR':([1,2,9,10,11,12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,],[16,-1,-14,-15,-16,-17,-2,16,16,16,16,16,16,16,-3,-4,-5,-6,-7,-18,]),'PLUS':([1,2,9,10,11,12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,],[17,-1,-14,-15,-16,-17,-2,17,17,17,17,17,17,17,-3,-4,-5,-6,-7,-18,]),'WITH':([1,2,9,10,11,12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,],[18,-1,-14,-15,-16,-17,-2,18,18,18,18,18,18,18,-3,-4,-5,-6,-7,-18,]),'RPAREN':([2,9,10,11,12,14,19,20,21,22,23,24,25,26,27,28,29,30,31,],[-1,-14,-15,-16,-17,-2,-8,-9,-10,-11,-12,-13,31,-3,-4,-5,-6,-7,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formula':([0,3,4,5,6,7,8,13,15,16,17,18,],[1,19,20,21,22,23,24,25,27,28,29,30,]),'literal':([0,3,4,5,6,7,8,13,15,16,17,18,],[2,2,2,2,2,2,2,2,2,2,2,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> formula","S'",1,None,None,None),
  ('formula -> literal','formula',1,'p_formula_literal','parser.py',12),
  ('literal -> ID','literal',1,'p_literal_atom','parser.py',16),
  ('literal -> ID BOT','literal',2,'p_literal_atom_neg','parser.py',20),
  ('formula -> formula TENSOR formula','formula',3,'p_formula_multiplicative','parser.py',24),
  ('formula -> formula PAR formula','formula',3,'p_formula_par','parser.py',28),
  ('formula -> formula PLUS formula','formula',3,'p_formula_additive','parser.py',32),
  ('formula -> formula WITH formula','formula',3,'p_formula_with','parser.py',36),
  ('formula -> OFC formula','formula',2,'p_formula_modalities','parser.py',40),
  ('formula -> WHYNOT formula','formula',2,'p_formula_modalities','parser.py',41),
  ('formula -> SEC formula','formula',2,'p_formula_modalities','parser.py',42),
  ('formula -> NEG formula','formula',2,'p_formula_paraconsistent','parser.py',51),
  ('formula -> CIRC formula','formula',2,'p_formula_paraconsistent','parser.py',52),
  ('formula -> TILDE formula','formula',2,'p_formula_paraconsistent','parser.py',53),
  ('formula -> ONE','formula',1,'p_formula_units','parser.py',62),
  ('formula -> BOT','formula',1,'p_formula_units','parser.py',63),
  ('formula -> ZERO','formula',1,'p_formula_units','parser.py',64),
  ('formula -> TOP','formula',1,'p_formula_units','parser.py',65),
  ('formula -> LPAREN formula RPAREN','formula',3,'p_formula_group','parser.py',76),
]
