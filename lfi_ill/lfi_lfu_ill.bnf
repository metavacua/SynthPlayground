# Formal Grammar of pLLLU (Paraconsistent Paracomplete Light Linear Logic)

# --- Core Linear Logic Components ---

# Literals
<literal> ::= <atom> | <atom_neg>

# Multiplicatives (Resource Combination)
<multiplicative> ::= <tensor> | <par>
<tensor> ::= <formula> "⊗" <formula>   # "tensor": Both resources A and B are provided together
<par> ::= <formula> "⅋" <formula>      # "par": Resources A and B are provided in parallel
<one> ::= "1"                         # Multiplicative unit (empty resource)
<bottom> ::= "⊥"                      # Multiplicative neutral (dual of one)

# Additives (Choice)
<additive> ::= <plus> | <with>
<plus> ::= <formula> "⊕" <formula>    # "plus": Prover chooses to provide resource A or B
<with> ::= <formula> "&" <formula>    # "with": Consumer chooses which resource (A or B) to use
<zero> ::= "0"                        # Additive unit (no choice)
<top> ::= "⊤"                         # Additive neutral (any choice)

# --- Modalities ---

# Exponential Modalities (Controlled Structural Rules)
<modality> ::= <of_course> | <why_not>
<of_course> ::= "!" <formula>         # "of course": Resource can be used limitlessly (contraction/weakening)
<why_not> ::= "?" <formula>           # "why not": Dual of "of course"

# LLL Specific Modality
<section_modality> ::= <section>
<section> ::= "§" <formula>           # "section": LLL modality for polytime complexity

# --- Non-Classical Extensions ---

# Paraconsistent (LFI - Handles Contradictions/Gluts)
<paraconsistent> ::= <p_negation> | <consistency>
<p_negation> ::= "¬" <formula>         # Paraconsistent negation: "Evidence against A"
<consistency> ::= "∘" <formula>        # Consistency operator: "A is consistent"

# Paracomplete (LFU - Handles Incompleteness/Gaps)
<paracomplete> ::= <co_negation> | <undeterminedness> | <completeness>
<co_negation> ::= "-" <formula>         # Paracomplete co-negation
<undeterminedness> ::= "*" <formula>     # Undeterminedness operator
<completeness> ::= "~" <formula>       # Completeness/Determinedness operator: "A is determined"

# --- Main Production Rule ---

# Formula (The set of all well-formed formulas)
<formula> ::= <literal>
            | <multiplicative>
            | <additive>
            | <modality>
            | <section_modality>
            | <paraconsistent>
            | <paracomplete>
            | <one>
            | <bottom>
            | <zero>
            | <top>

# --- Atomic Components ---

# Atoms (Basic propositions)
<atom> ::= "p" | "q" | "r" | ... # Represents any atomic statement

# Linear Negation (Structural)
<atom_neg> ::= <atom> "⊥"             # Linear negation on an atom