# Left-Context-Sensitive Grammar for L = {a^(2^n) | n >= 1}
#
# This grammar generates strings of 'a's where the length is a power of two (e.g., aa, aaaa, aaaaaaaa).
# This language is context-sensitive but not context-free.
#
# The grammar operates in stages, using markers (R, L) to control the process.
# The core doubling logic is in rules like `LA -> LAA`, where L provides the left-context.
#
# Stage 1: Generate the base case 'aa' and set up for doubling.
S -> LAAR

# Stage 2: Doubling phase. The L marker moves right, doubling each A it passes.
LA -> LAA

# Stage 3: The L marker hits the R marker. They are converted to new markers
# to signal the next phase (moving back left).
LR -> CR

# Stage 4: The C marker moves left, changing A's to a's.
CA -> aC

# Stage 5: The C marker hits the beginning. It is removed, and the L marker
# is restored for the next round of doubling.
LC -> L

# Stage 6: Termination. The markers are removed, leaving the final string.
L ->
R ->