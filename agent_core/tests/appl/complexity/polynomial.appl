// Represents a polynomial-time workload.
let initial_state = create_state(Cons("A", Cons("B", Cons("C", Nil(String))))) in
let goal = create_goal("D")(Cons("D", Nil(String))) in
let action1 = create_action("to_B")(Cons("A", Nil(String)))(Cons("B", Nil(String))) in
let action2 = create_action("to_C")(Cons("B", Nil(String)))(Cons("C", Nil(String))) in
let action3 = create_action("to_D")(Cons("C", Nil(String)))(Cons("D", Nil(String))) in
let state1 = apply_action(initial_state)(action1) in
let state2 = apply_action(state1)(action2) in
let state3 = apply_action(state2)(action3) in
is_goal(state3)(goal)