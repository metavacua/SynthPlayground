{
  "protocol_id": "plan-registry-001",
  "description": "Defines a central registry for discovering and executing hierarchical plans by a logical name.",
  "rules": [
    {
      "rule_id": "registry-definition",
      "description": "A central plan registry MUST exist at 'knowledge_core/plan_registry.json'. It maps logical plan names to their file paths.",
      "enforcement": "The file's existence and format can be checked by the validation toolchain."
    },
    {
      "rule_id": "registry-first-resolution",
      "description": "The 'call_plan <argument>' directive MUST first attempt to resolve '<argument>' as a logical name in the plan registry. If resolution fails, it MUST fall back to treating '<argument>' as a direct file path for backward compatibility.",
      "enforcement": "This logic must be implemented in both the plan validator (`fdc_cli.py`) and the execution engine (`master_control.py`)."
    },
    {
      "rule_id": "registry-management-tool",
      "description": "A dedicated tool (`tooling/plan_manager.py`) MUST be provided for managing the plan registry, with functions to register, deregister, and list plans.",
      "enforcement": "The tool's existence and functionality can be verified via integration tests."
    }
  ],
  "associated_tools": [
    "tooling/plan_manager.py",
    "tooling/master_control.py",
    "tooling/fdc_cli.py"
  ]
}