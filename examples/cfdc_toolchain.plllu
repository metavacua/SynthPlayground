-- CFDC Toolchain Example in pLLLU --
-- Models a toolchain with a choice and potential conflict --

-- Tools
let lint = "Run Linter" in
let format_A = "Run Formatter A" in
let format_B = "Run Formatter B" in
let test = "Run Unit Tests" in

-- The choice: Use Formatter A or Formatter B
let format_choice = format_A ⊕ format_B in

-- Let's say Formatter B is known to sometimes conflict with the linter rules.
-- We can model this with a paraconsistent negation.
let potential_conflict = format_B ⊗ ¬lint in

-- We can also assert that running tests makes the formatting choice consistent.
let tests_resolve_conflict = test ⊗ ∘(format_A) in

-- The full plan combines these ideas.
-- The `&` operator means the context must be able to satisfy both sides.
(lint ⊗ format_choice) & (potential_conflict ⅋ tests_resolve_conflict)