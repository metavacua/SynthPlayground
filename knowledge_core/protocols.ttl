@prefix ns1: <https://w3id.org/ai-protocol/v1/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

<urn:protocol:agent-bootstrap-001> a ns1:Protocol ;
    rdfs:label "A foundational protocol that dictates the agent's initial actions upon starting any task." ;
    ns1:hasVersion <urn:protocol:agent-bootstrap-001:version:1.0.0> .

<urn:protocol:agent-interaction-001> a ns1:Protocol ;
    rdfs:label "A protocol governing the agent's core interaction and planning tools." ;
    ns1:hasVersion <urn:protocol:agent-interaction-001:version:1.0.0> .

<urn:protocol:agent-shell-001> a ns1:Protocol ;
    rdfs:label "A protocol governing the use of the interactive agent shell as the primary entry point for all tasks." ;
    ns1:hasVersion <urn:protocol:agent-shell-001:version:1.0.0> .

<urn:protocol:aura-execution-001> a ns1:Protocol ;
    rdfs:label "A protocol for executing Aura scripts, enabling a more expressive and powerful planning and automation language for the agent." ;
    ns1:hasVersion <urn:protocol:aura-execution-001:version:1.0.0> .

<urn:protocol:capability-verification-001> a ns1:Protocol ;
    rdfs:label "A protocol for using the capability verifier tool to empirically test the agent's monotonic improvement." ;
    ns1:hasVersion <urn:protocol:capability-verification-001:version:1.0.0> .

<urn:protocol:csdc-001> a ns1:Protocol ;
    rdfs:label "A protocol for the Context-Sensitive Development Cycle (CSDC), which introduces development models based on logical constraints." ;
    ns1:hasVersion <urn:protocol:csdc-001:version:1.0.0> .

<urn:protocol:dependency-management-001> a ns1:Protocol ;
    rdfs:label "A protocol for ensuring a reliable execution environment through formal dependency management." ;
    ns1:hasVersion <urn:protocol:dependency-management-001:version:1.0.0> .

<urn:protocol:experimental-prologue-001> a ns1:Protocol ;
    rdfs:label "An experimental protocol to test dynamic rule-following. It mandates a prologue action before file creation." ;
    ns1:hasVersion <urn:protocol:experimental-prologue-001:version:1.0.0> .

<urn:protocol:file-indexing-001> a ns1:Protocol ;
    rdfs:label "A protocol for maintaining an up-to-date file index to accelerate tool performance." ;
    ns1:hasVersion <urn:protocol:file-indexing-001:version:1.0.0> .

<urn:protocol:hdl-proving-001> a ns1:Protocol ;
    rdfs:label "A protocol for interacting with the Hypersequent-calculus-based logic engine, allowing the agent to perform formal logical proofs." ;
    ns1:hasVersion <urn:protocol:hdl-proving-001:version:1.0.0> .

<urn:protocol:plllu-execution-001> a ns1:Protocol ;
    rdfs:label "A protocol for executing pLLLU scripts, enabling a more expressive and powerful planning and automation language for the agent." ;
    ns1:hasVersion <urn:protocol:plllu-execution-001:version:1.0.0> .

<urn:protocol:security-header> a ns1:Protocol ;
    rdfs:label "Defines the identity and purpose of the Security Protocol document." ;
    ns1:hasVersion <urn:protocol:security-header:version:1.0.0> .

<urn:protocol:security-vuln-reporting-001> a ns1:Protocol ;
    rdfs:label "Defines the official policy and procedure for reporting security vulnerabilities." ;
    ns1:hasVersion <urn:protocol:security-vuln-reporting-001:version:1.0.0> .

<urn:protocol:self-improvement-protocol-001> a ns1:Protocol ;
    rdfs:label "A protocol governing the process for an agent to propose, implement, and validate improvements to the agent's own operational protocols and tools." ;
    ns1:hasVersion <urn:protocol:self-improvement-protocol-001:version:1.0.0> .

<urn:protocol:speculative-execution-001> a ns1:Protocol ;
    rdfs:label "A protocol that governs the agent's ability to initiate and execute self-generated, creative, or exploratory tasks during idle periods." ;
    ns1:hasVersion <urn:protocol:speculative-execution-001:version:1.0.0> .

<urn:protocol:toolchain-review-on-schema-change-001> a ns1:Protocol ;
    rdfs:label "A meta-protocol to ensure the agent's toolchain remains synchronized with the architecture of its governing protocols." ;
    ns1:hasVersion <urn:protocol:toolchain-review-on-schema-change-001:version:1.0.0> .

<urn:protocol:unified-auditor-001> a ns1:Protocol ;
    rdfs:label "A protocol for the unified repository auditing tool, which combines multiple health and compliance checks into a single interface." ;
    ns1:hasVersion <urn:protocol:unified-auditor-001:version:1.0.0> .

<urn:protocol:unified-doc-builder-001> a ns1:Protocol ;
    rdfs:label "A protocol for the unified documentation builder, which generates various documentation artifacts from the repository's sources of truth." ;
    ns1:hasVersion <urn:protocol:unified-doc-builder-001:version:1.0.0> .

<urn:protocol:agent-bootstrap-001:rule:bootstrap-load-agents-md> a ns1:Rule ;
    rdfs:label "Upon initialization for any task, the agent's first and highest-priority action must be to locate, read, and parse the AGENTS.md file in the repository root. This ensures the agent is properly contextualized before any planning or execution begins." .

<urn:protocol:agent-bootstrap-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of agent-bootstrap-001" ;
    ns1:hasRule <urn:protocol:agent-bootstrap-001:rule:bootstrap-load-agents-md> ;
    ns1:versionString "1.0.0" .

<urn:protocol:agent-interaction-001:rule:communication-tool-access> a ns1:Rule ;
    rdfs:label "The agent is authorized to use the `message_user` tool to communicate with the user, providing updates and asking for clarification. This is essential for a collaborative workflow." .

<urn:protocol:agent-interaction-001:rule:planning-tool-access> a ns1:Rule ;
    rdfs:label "The agent is authorized to use the `set_plan` tool to create and update its execution plan. This is a foundational capability for task execution." .

<urn:protocol:agent-interaction-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of agent-interaction-001" ;
    ns1:hasRule <urn:protocol:agent-interaction-001:rule:communication-tool-access>,
        <urn:protocol:agent-interaction-001:rule:planning-tool-access> ;
    ns1:versionString "1.0.0" .

<urn:protocol:agent-shell-001:rule:shell-is-primary-entry-point> a ns1:Rule ;
    rdfs:label "All agent tasks must be initiated through the `agent_shell.py` script. This script is the designated, API-driven entry point that ensures proper initialization of the MasterControlGraph FSM, centralized logging, and programmatic lifecycle management. Direct execution of other tools or scripts is forbidden for task initiation." .

<urn:protocol:agent-shell-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of agent-shell-001" ;
    ns1:hasRule <urn:protocol:agent-shell-001:rule:shell-is-primary-entry-point> ;
    ns1:versionString "1.0.0" .

<urn:protocol:aura-execution-001:rule:execute-aura-script> a ns1:Rule ;
    rdfs:label "The `aura_executor.py` tool should be used to execute .aura script files. This tool provides the bridge between the agent's master control loop and the Aura language interpreter." .

<urn:protocol:aura-execution-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of aura-execution-001" ;
    ns1:hasRule <urn:protocol:aura-execution-001:rule:execute-aura-script> ;
    ns1:versionString "1.0.0" .

<urn:protocol:capability-verification-001:rule:verify-capability-acquisition> a ns1:Rule ;
    rdfs:label "The `capability_verifier.py` tool should be used to test the agent's ability to acquire a new capability defined by a failing test file. The tool orchestrates the failure, self-correction, and verification process." .

<urn:protocol:capability-verification-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of capability-verification-001" ;
    ns1:hasRule <urn:protocol:capability-verification-001:rule:verify-capability-acquisition> ;
    ns1:versionString "1.0.0" .

<urn:protocol:csdc-001:rule:model-a-constraints> a ns1:Rule ;
    rdfs:label "Model A permits `define_set_of_names` but forbids `define_diagonalization_function`." .

<urn:protocol:csdc-001:rule:model-b-constraints> a ns1:Rule ;
    rdfs:label "Model B permits `define_diagonalization_function` but forbids `define_set_of_names`." .

<urn:protocol:csdc-001:rule:use-csdc-cli> a ns1:Rule ;
    rdfs:label "The `csdc_cli.py` tool must be used to validate plans under the CSDC. This tool enforces model-specific constraints (A or B) and complexity requirements (P or EXP)." .

<urn:protocol:csdc-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of csdc-001" ;
    ns1:hasRule <urn:protocol:csdc-001:rule:model-a-constraints>,
        <urn:protocol:csdc-001:rule:model-b-constraints>,
        <urn:protocol:csdc-001:rule:use-csdc-cli> ;
    ns1:versionString "1.0.0" .

<urn:protocol:dependency-management-001:rule:dependency-install-on-start> a ns1:Rule ;
    rdfs:label "Upon starting a task, after loading AGENTS.md, the agent MUST install all required Python packages listed in the `requirements.txt` file. This ensures the environment is correctly configured before any other tools are executed." .

<urn:protocol:dependency-management-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of dependency-management-001" ;
    ns1:hasRule <urn:protocol:dependency-management-001:rule:dependency-install-on-start> ;
    ns1:versionString "1.0.0" .

<urn:protocol:experimental-prologue-001:rule:create-prologue-file> a ns1:Rule ;
    rdfs:label "Before creating any new file as part of a task, the agent MUST first create a file named 'prologue.txt' with the content 'This is a prologue file.' This rule serves as a test of the agent's ability to adapt its behavior to new, dynamically loaded protocols." .

<urn:protocol:experimental-prologue-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of experimental-prologue-001" ;
    ns1:hasRule <urn:protocol:experimental-prologue-001:rule:create-prologue-file> ;
    ns1:versionString "1.0.0" .

<urn:protocol:file-indexing-001:rule:update-index-before-submit> a ns1:Rule ;
    rdfs:label "Before submitting any changes that alter the file structure (create, delete, rename), the agent MUST rebuild the repository's file index. This ensures that tools relying on the index, such as the FDC validator, have an accurate view of the filesystem." .

<urn:protocol:file-indexing-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of file-indexing-001" ;
    ns1:hasRule <urn:protocol:file-indexing-001:rule:update-index-before-submit> ;
    ns1:versionString "1.0.0" .

<urn:protocol:hdl-proving-001:rule:prove-sequent> a ns1:Rule ;
    rdfs:label "The `hdl_prover.py` tool should be used to check the provability of a logical sequent. This tool acts as a wrapper for the underlying Lisp-based prover." .

<urn:protocol:hdl-proving-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of hdl-proving-001" ;
    ns1:hasRule <urn:protocol:hdl-proving-001:rule:prove-sequent> ;
    ns1:versionString "1.0.0" .

<urn:protocol:plllu-execution-001:rule:execute-plllu-script> a ns1:Rule ;
    rdfs:label "The `plllu_runner.py` tool should be used to execute .plllu script files. This tool provides the bridge between the agent's master control loop and the pLLLU language interpreter." .

<urn:protocol:plllu-execution-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of plllu-execution-001" ;
    ns1:hasRule <urn:protocol:plllu-execution-001:rule:execute-plllu-script> ;
    ns1:versionString "1.0.0" .

<urn:protocol:security-header:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of security-header" ;
    ns1:versionString "1.0.0" .

<urn:protocol:security-vuln-reporting-001:rule:no-public-disclosure> a ns1:Rule ;
    rdfs:label "Vulnerabilities MUST NOT be disclosed publicly until a patch is available and has been distributed." .

<urn:protocol:security-vuln-reporting-001:rule:vuln-reporting-channel> a ns1:Rule ;
    rdfs:label "All suspected security vulnerabilities MUST be reported privately to the designated security contact." .

<urn:protocol:security-vuln-reporting-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of security-vuln-reporting-001" ;
    ns1:hasRule <urn:protocol:security-vuln-reporting-001:rule:no-public-disclosure>,
        <urn:protocol:security-vuln-reporting-001:rule:vuln-reporting-channel> ;
    ns1:versionString "1.0.0" .

<urn:protocol:self-improvement-protocol-001:rule:sip-001-proposal> a ns1:Rule ;
    rdfs:label "Any proposed change to the protocol system must be formalized as a Self-Improvement Proposal (SIP) and submitted to the `proposals/` directory. The SIP must include a detailed description of the proposed change, its rationale, and a plan for implementation and verification." ;
    ns1:hasTest <urn:test:file:tests/protocols/test_self-improvement-protocol-001.py> .

<urn:protocol:self-improvement-protocol-001:rule:sip-002-implementation> a ns1:Rule ;
    rdfs:label "The implementation of an approved SIP must be developed on a separate feature branch. The branch name must follow the pattern `feature/sip-XXX`, where `XXX` is the SIP number." ;
    ns1:hasTest <urn:test:file:tests/protocols/test_self-improvement-protocol-001.py> .

<urn:protocol:self-improvement-protocol-001:rule:sip-003-verification> a ns1:Rule ;
    rdfs:label "All changes to the protocol system must be accompanied by corresponding tests in the `tests/protocols/` directory. The tests must be executed and pass before the SIP can be merged." ;
    ns1:hasTest <urn:test:file:tests/protocols/test_self-improvement-protocol-001.py> .

<urn:protocol:self-improvement-protocol-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of self-improvement-protocol-001" ;
    ns1:hasRule <urn:protocol:self-improvement-protocol-001:rule:sip-001-proposal>,
        <urn:protocol:self-improvement-protocol-001:rule:sip-002-implementation>,
        <urn:protocol:self-improvement-protocol-001:rule:sip-003-verification> ;
    ns1:versionString "1.0.0" .

<urn:protocol:speculative-execution-001:rule:formal-proposal-required> a ns1:Rule ;
    rdfs:label "A speculative task must begin with the creation of a formal proposal document, outlining the objective, rationale, and plan." .

<urn:protocol:speculative-execution-001:rule:idle-state-trigger> a ns1:Rule ;
    rdfs:label "The agent may only initiate a speculative task when it has no active, user-assigned tasks." .

<urn:protocol:speculative-execution-001:rule:resource-constraints> a ns1:Rule ;
    rdfs:label "Speculative tasks must operate under defined resource limits." .

<urn:protocol:speculative-execution-001:rule:speculative-logging> a ns1:Rule ;
    rdfs:label "All logs and artifacts generated during a speculative task must be tagged as 'speculative'." .

<urn:protocol:speculative-execution-001:rule:user-review-gate> a ns1:Rule ;
    rdfs:label "Final artifacts from a speculative task must be submitted for user review and cannot be merged directly." .

<urn:protocol:speculative-execution-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of speculative-execution-001" ;
    ns1:hasRule <urn:protocol:speculative-execution-001:rule:formal-proposal-required>,
        <urn:protocol:speculative-execution-001:rule:idle-state-trigger>,
        <urn:protocol:speculative-execution-001:rule:resource-constraints>,
        <urn:protocol:speculative-execution-001:rule:speculative-logging>,
        <urn:protocol:speculative-execution-001:rule:user-review-gate> ;
    ns1:versionString "1.0.0" .

<urn:protocol:toolchain-review-on-schema-change-001:rule:toolchain-audit-on-schema-change> a ns1:Rule ;
    rdfs:label "If a change is made to the core protocol schema (`protocol.schema.json`) or to the compilers that process it (`protocol_compiler.py`, `hierarchical_compiler.py`), a formal audit of the entire `tooling/` directory MUST be performed as a subsequent step. This audit should verify that all tools are compatible with the new protocol structure." .

<urn:protocol:toolchain-review-on-schema-change-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of toolchain-review-on-schema-change-001" ;
    ns1:hasRule <urn:protocol:toolchain-review-on-schema-change-001:rule:toolchain-audit-on-schema-change> ;
    ns1:versionString "1.0.0" .

<urn:protocol:unified-auditor-001:rule:run-all-audits> a ns1:Rule ;
    rdfs:label "The `auditor.py` script should be used to run comprehensive checks on the repository's health. It can be run with 'all' to check protocols, plans, and documentation completeness." .

<urn:protocol:unified-auditor-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of unified-auditor-001" ;
    ns1:hasRule <urn:protocol:unified-auditor-001:rule:run-all-audits> ;
    ns1:versionString "1.0.0" .

<urn:protocol:unified-doc-builder-001:rule:use-doc-builder-for-all-docs> a ns1:Rule ;
    rdfs:label "The `doc_builder.py` script is the single entry point for generating all user-facing documentation, including system-level docs, README files, and GitHub Pages. It should be called with the appropriate '--format' argument." .

<urn:protocol:unified-doc-builder-001:version:1.0.0> a ns1:ProtocolVersion ;
    rdfs:label "Version 1.0.0 of unified-doc-builder-001" ;
    ns1:hasRule <urn:protocol:unified-doc-builder-001:rule:use-doc-builder-for-all-docs> ;
    ns1:versionString "1.0.0" .

<urn:test:file:tests/protocols/test_self-improvement-protocol-001.py> a ns1:Test ;
    rdfs:label "Test for self-improvement-protocol-001" .

