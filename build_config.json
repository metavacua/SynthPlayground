{
  "targets": {
    "gemini-protocol": {
      "type": "command",
      "command": "python3 protocols/gemini/build.py",
      "description": "Compile the Gemini protocol."
    },
    "external-apis-protocol": {
      "type": "command",
      "command": "python3 protocols/external_apis/build.py",
      "description": "Compile the external APIs protocol."
    },
    "core-protocol": {
      "type": "command",
      "command": "python3 protocols/core/build.py",
      "description": "Compile the core protocol."
    },
    "compliance-protocol": {
      "type": "command",
      "command": "python3 protocols/compliance/build.py",
      "description": "Compile the compliance protocol."
    },
    "critic-protocol": {
      "type": "command",
      "command": "python3 protocols/critic/build.py",
      "description": "Compile the critic protocol."
    },
    "experimental-protocol": {
      "type": "command",
      "command": "python3 protocols/experimental/build.py",
      "description": "Compile the experimental protocol."
    },
    "security-protocol": {
      "type": "command",
      "command": "python3 protocols/security/build.py",
      "description": "Compile the security protocol."
    },
    "self-improvement-protocol": {
      "type": "command",
      "command": "python3 protocols/self_improvement/build.py",
      "description": "Compile the self-improvement protocol."
    },
    "testing-protocol": {
      "type": "command",
      "command": "python3 protocols/testing/build.py",
      "description": "Compile the testing protocol."
    },
    "guardian-protocol": {
      "type": "command",
      "command": "python3 protocols/guardian/build.py",
      "description": "Compile the guardian protocol."
    },
    "agents-md": {
      "type": "compiler",
      "compiler": "tooling/generate_agents_md.py",
      "output": "AGENTS.md",
      "sources": [
        "AGENTS.standard.md"
      ],
      "description": "Generate the self-executing AGENTS.md file."
    },
    "install": {
      "type": "command",
      "command": "pip install -r requirements.txt",
      "description": "Install Python dependencies."
    },
    "format": {
      "type": "command",
      "command": "python3 -m black tooling/",
      "description": "Format the code using black."
    },
    "lint": {
      "type": "command",
      "command": "python3 -m flake8 .",
      "description": "Lint the code using flake8."
    },
    "test": {
      "type": "command",
      "command": "python3 -m pytest",
      "description": "Run the test suite using pytest."
    }
  },
  "build_groups": {
    "all": [
      "agents-md",
      "gemini-protocol",
      "external-apis-protocol",
      "core-protocol",
      "compliance-protocol",
      "critic-protocol",
      "experimental-protocol",
      "security-protocol",
      "self-improvement-protocol",
      "testing-protocol",
      "guardian-protocol"
    ]
  }
}
