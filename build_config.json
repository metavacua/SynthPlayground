{
  "targets": {
    "protocols": {
      "type": "command",
      "command": "python3 tooling/compile_protocols.py",
      "description": "Compile all protocols."
    },
    "docs": {
      "type": "compiler",
      "compiler": "tooling/doc_builder.py",
      "output": "docs/SYSTEM_DOCUMENTATION.md",
      "options": {
        "--format": "system",
        "--source-dir": [
          "tooling/",
          "utils/",
          "research/",
          "language_theory/",
          "logic_system/"
        ]
      },
      "description": "Generate system documentation."
    },
    "knowledge-compile": {
      "type": "command",
      "command": "python3 tooling/knowledge_compiler.py --source-dir postmortems/",
      "description": "Compile lessons from post-mortems."
    },
    "knowledge-integrate": {
      "type": "compiler",
      "compiler": "tooling/knowledge_integrator.py",
      "output": "knowledge_core/integrated_knowledge.json",
      "description": "Integrate knowledge from various sources."
    },
    "guardian-protocol": {
      "type": "command",
      "command": "python3 protocols/guardian/build.py",
      "description": "Compile the guardian protocol."
    },
    "agents-md": {
      "type": "compiler",
      "compiler": "tooling/master_agents_md_generator.py",
      "output": "AGENTS.md",
      "options": {
        "--build-config": "build_config.json"
      },
      "description": "Generate the master AGENTS.md file."
    },
    "install": {
      "type": "command",
      "command": "pip install -r requirements.txt",
      "description": "Install Python dependencies."
    },
    "format": {
      "type": "command",
      "command": "python3 -m black tooling/",
      "description": "Format the code using black."
    },
    "lint": {
      "type": "command",
      "command": "python3 -m flake8 .",
      "description": "Lint the code using flake8."
    },
    "test": {
      "type": "command",
      "command": "python3 -m pytest",
      "description": "Run the test suite using pytest."
    }
  },
  "build_groups": {
    "all": [
      "protocols",
      "docs",
      "knowledge-compile",
      "knowledge-integrate",
      "agents-md"
    ],
    "knowledge": [
      "knowledge-compile",
      "knowledge-integrate"
    ]
  }
}
