{
  "targets": {
    "install": {
      "type": "command",
      "command": "pip install -r requirements.txt",
      "description": "Installs Python dependencies from requirements.txt."
    },
    "format": {
      "type": "command",
      "command": "black .",
      "description": "Formats all Python code using the Black code formatter."
    },
    "lint": {
      "type": "command",
      "command": "flake8 .",
      "description": "Lints all Python code using flake8."
    },
    "test": {
      "type": "command",
      "command": "python3 -m unittest discover -v .",
      "description": "Runs all unit tests in the repository."
    },
    "docs": {
      "type": "command",
      "command": "python3 tooling/doc_builder.py --format system",
      "description": "Generates detailed system documentation."
    },
    "readme": {
      "type": "command",
      "command": "python3 tooling/doc_builder.py --format readme",
      "description": "Generates the root README.md file."
    },
    "pages": {
      "type": "command",
      "command": "python3 tooling/doc_builder.py --format pages",
      "description": "Generates index.html for GitHub Pages."
    },
    "security": {
      "type": "command",
      "command": "echo 'Security documentation is now part of AGENTS.md'",
      "description": "Compiles security protocols into SECURITY.md."
    },
    "agents": {
      "type": "command",
      "command": "python3 tooling/aal_compiler.py",
      "description": "Compiles all AAL protocols into AGENTS.md."
    },
    "audit": {
      "type": "command",
      "command": "python3 tooling/auditor.py all",
      "description": "Runs all unified audits (protocols, plans, docs)."
    },
    "clean": {
        "type": "command",
        "command": "rm -f AGENTS.md README.md SECURITY.md knowledge_core/SYSTEM_DOCUMENTATION.md index.html",
        "description": "Removes all compiled protocol and documentation artifacts."
    }
  },
  "build_groups": {
    "all": ["docs", "security", "agents", "readme", "pages"],
    "quality": ["format", "lint", "test"]
  }
}