{
  "protocol_id": "decidability-constraints-001",
  "description": "Ensures all development processes are formally decidable and computationally tractable.",
  "rules": [
    {
      "rule_id": "non-turing-completeness",
      "description": "The agent's planning and execution language is, by design, not Turing-complete. This is a fundamental constraint to guarantee that all processes will terminate.",
      "enforcement": "Enforced by the design of the plan runner and validated by the `lint` command in the FDC toolchain."
    },
    {
      "rule_id": "bounded-recursion",
      "description": "The agent MUST NOT generate plans that involve recursion or self-invocation. A plan cannot trigger another FDC or a sub-plan, with the sole exception of the 'Deep Research Cycle'.",
      "enforcement": "The `lint` command in `tooling/fdc_cli.py` scans plans for disallowed recursive calls."
    },
    {
      "rule_id": "fsm-adherence",
      "description": "All plans must be valid strings in the language defined by the tooling/fdc_fsm.json Finite State Machine.",
      "enforcement": "The `lint` command in `tooling/fdc_cli.py` validates the plan against the FSM definition."
    }
  ],
  "associated_tools": [
    "tooling/fdc_cli.py",
    "tooling/fdc_fsm.json"
  ]
}