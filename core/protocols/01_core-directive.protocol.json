{
  "protocol_id": "core-directive-001",
  "description": "The mandatory first action for any new task, ensuring a formal start to the Finite Development Cycle (FDC).\n\n**Associated Tool Documentation (`tooling/fdc_cli.py`):**\n\n  \n  ### `/app/tooling/fdc_cli.py`\n  This script provides a command-line interface (CLI) for managing the Finite\n  Development Cycle (FDC).\n  \n  The FDC is a structured workflow for agent-driven software development. This CLI\n  is the primary human interface for interacting with that cycle, providing\n  commands to:\n  - **start:** Initiates a new development task, triggering the \"Advanced\n    Orientation and Research Protocol\" (AORP) to ensure the agent is fully\n    contextualized.\n  - **close:** Formally concludes a task, creating a post-mortem template for\n    analysis and lesson-learning.\n  - **validate:** Checks a given plan file for both syntactic and semantic\n    correctness against the FDC's governing Finite State Machine (FSM). This\n    ensures that a plan is executable and will not violate protocol.\n  - **analyze:** Examines a plan to determine its computational complexity (e.g.,\n    Constant, Polynomial, Exponential) and its modality (Read-Only vs.\n    Read-Write), providing insight into the plan's potential impact.\n  \n  **Public Functions:**\n  \n  - #### `def analyze_plan(plan_filepath, return_results=False)`\n    > Analyzes a plan file to determine its complexity class and modality.\n  \n  - #### `def close_task(task_id)`\n    > Automates the closing of a Finite Development Cycle.\n  \n  - #### `def main()`\n  \n  - #### `def start_task(task_id)`\n    > Initiates the AORP cascade for a new task.\n  \n  - #### `def validate_plan(plan_filepath)`\n",
  "rules": [
    {
      "rule_id": "mandatory-fdc-start",
      "description": "Upon receiving a new task, the agent's first action MUST be to programmatically execute the FDC 'start' command to formally initiate the task and run the AORP orientation cascade.",
      "enforcement": "This is a hard-coded behavior in the agent's core operational loop and is verified by the FDC toolchain."
    }
  ],
  "associated_tools": [
    "tooling/fdc_cli.py"
  ]
}