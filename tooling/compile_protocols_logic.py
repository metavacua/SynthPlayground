import json
import jsonschema
from tooling.build_utils import sanitize_markdown

DISCLAIMER_TEMPLATE = """\
# ---
# DO NOT EDIT THIS FILE DIRECTLY.
# This file is programmatically generated by the unified protocol compiler.
# All changes to agent protocols must be made in the source files
# located in the `{source_dir_name}/` directory.
#
# This file contains the compiled protocols in a human-readable Markdown format,
# with machine-readable JSON definitions embedded.
# ---
"""

def generate_agents_md_content(module_name, md_files_content, json_files_content, schema):
    """
    Generates the content for an AGENTS.md file.
    """
    disclaimer = DISCLAIMER_TEMPLATE.format(source_dir_name=module_name)
    final_content = [disclaimer]

    for content in md_files_content:
        sanitized_content = sanitize_markdown(content)
        final_content.append(sanitized_content)
        final_content.append("\n---\n")

    for protocol_data in json_files_content:
        try:
            jsonschema.validate(instance=protocol_data, schema=schema)
            json_string = json.dumps(protocol_data, indent=2)
            md_json_block = f"```json\n{json_string}\n```\n"
            final_content.append(md_json_block)
            final_content.append("\n---\n")
        except jsonschema.ValidationError as e:
            print(f"Warning: Schema validation failed for a protocol: {e.message}", file=sys.stderr)

    return "\n".join(final_content)
