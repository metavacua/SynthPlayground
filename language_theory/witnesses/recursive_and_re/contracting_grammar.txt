# A Simple Grammar with a Contracting Rule
#
# This grammar generates the simple regular language L = {a+}.
# However, it does so using a contracting (Type-0) rule.
#
# The purpose of this witness is to isolate the *mechanism* of contraction
# from the complexity of the language being generated. It demonstrates a
# grammar that is structurally unrestricted, even though the language it
# generates is simple and decidable. This is a key step in exploring
# the boundary between CSL and RE languages.

# Stage 1: Generate a string of one or more 'B's, terminated by a 'C'.
S -> S B | C

# Stage 2: Convert B's to a's, but only if they are next to a C.
# This is a non-contracting rule.
B C -> a C

# Stage 3: The contracting rule. The 'C' marker, having served its
# purpose as a context for conversion, is now erased.
C ->